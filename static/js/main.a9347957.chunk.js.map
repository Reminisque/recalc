{"version":3,"sources":["components/Recalc.module.css","components/RecalcDisplay.module.css","components/RecalcButton.module.css","components/ScalingText.module.css","components/RecalcButton.js","components/ScalingText.js","components/RecalcDisplay.js","components/Recalc.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","RecalcButton","inputFunc","val","props","this","className","inputVal","componentClass","styles","root","onClick","children","React","Component","ScalingText","state","scale","container","createRef","ref","style","transform","node","current","parent","parentNode","usedWidth","offsetWidth","contentScale","setState","RecalcDisplay","displayValue","operation","operationText","currentText","Recalc","MAX_INPUT_DIGITS","OPERATIONS","a","b","DEBUG_STATE","inputDigit","digit","waitingOperand","expressionEnd","displayLength","length","hasDecimal","indexOf","maxLength","clear","newValue","inputDecimal","noDecimal","inputOperator","operator","operandValue","secondValue","result","calculate","inputEqual","toggleSign","parseFloat","toString","backspace","slice","clearEntry","debug","JSON","stringify","calcBtnPad","clearBtns","calcBtn","clearingBtn","numpad","opBtns","operatorBtn","App","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.a9347957.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"Recalc_root__11JNd\",\"debug\":\"Recalc_debug__5z5d-\",\"calcBtn\":\"Recalc_calcBtn__2TN_i\",\"calcBtnPad\":\"Recalc_calcBtnPad__90mzg\",\"clearBtns\":\"Recalc_clearBtns__wgIVq\",\"numpad\":\"Recalc_numpad__2hYto\",\"opBtns\":\"Recalc_opBtns__6vElE\",\"clearingBtn\":\"Recalc_clearingBtn__1NU3X\",\"operatorBtn\":\"Recalc_operatorBtn__2Sz-Z\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"RecalcDisplay_root__2U1ka\",\"operationText\":\"RecalcDisplay_operationText__2cFDd\",\"currentText\":\"RecalcDisplay_currentText__3gbez\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"RecalcButton_root__2Zv-3\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"ScalingText_root__3VAph\"};","import React from 'react';\r\nimport styles from './RecalcButton.module.css';\r\n\r\nclass RecalcButton extends React.Component {\r\n  render() {\r\n    const { className, inputVal } = this.props;\r\n    const componentClass = styles.root\r\n      + (className ? ' ' + className : '');\r\n\r\n    return (\r\n      <button className={componentClass} onClick={() => this.inputFunc(inputVal)}>\r\n        {this.props.children}\r\n      </button>\r\n    );\r\n  }\r\n\r\n  inputFunc = (val) => this.props.inputFunc(val)\r\n}\r\n\r\nexport default RecalcButton;","import React from 'react';\r\nimport styles from './ScalingText.module.css';\r\n\r\nclass ScalingText extends React.Component {\r\n  constructor() {\r\n    super();\r\n\r\n    this.state = {\r\n      scale: 1\r\n    };\r\n\r\n    this.container = React.createRef();\r\n  }\r\n\r\n  render() {\r\n    const { className } = this.props;\r\n    const componentClass = styles.root\r\n      + (className ? ' ' + className : '');\r\n    \r\n    return (\r\n      <div \r\n        className={componentClass}\r\n        ref={this.container}\r\n        style={{ transform: `scale(${this.state.scale})` }}>\r\n        {this.props.children}\r\n      </div>\r\n    )\r\n  }\r\n\r\n  componentDidUpdate() {\r\n    const scale = this.state.scale;\r\n    const node = this.container.current;\r\n    const parent = node.parentNode;\r\n    const usedWidth = node.offsetWidth;\r\n    const maxWidth = parent.offsetWidth;\r\n\r\n    const contentScale = maxWidth / usedWidth;\r\n    \r\n    if (contentScale === scale) {\r\n      return\r\n    }\r\n\r\n    if (contentScale < 1) {\r\n      this.setState({ scale: contentScale });\r\n    } else if (scale < 1) {\r\n      this.setState({ scale: 1 });\r\n    }\r\n  }\r\n}\r\n\r\nexport default ScalingText","import React from 'react';\r\nimport ScalingText from './ScalingText';\r\nimport styles from './RecalcDisplay.module.css';\r\n\r\nclass RecalcDisplay extends React.Component {\r\n  render() {\r\n    const { className, displayValue, operation } = this.props;\r\n    const componentClass = styles.root\r\n      + (className ? ' ' + className : '');\r\n    \r\n    return (\r\n      <div className={componentClass}>\r\n        <ScalingText className={styles.operationText}>{operation}</ScalingText>\r\n        <ScalingText className={styles.currentText}>{displayValue}</ScalingText>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default RecalcDisplay;","import React from 'react';\r\nimport RecalcButton from './RecalcButton';\r\nimport RecalcDisplay from './RecalcDisplay';\r\nimport styles from './Recalc.module.css';\r\n\r\n\r\nclass Recalc extends React.Component {\r\n  MAX_INPUT_DIGITS = 16;\r\n  OPERATIONS = {\r\n    '+': (a,b) => { return a + b },\r\n    '-': (a,b) => { return a - b },\r\n    '*': (a,b) => { return a * b },\r\n    '/': (a,b) => { return a / b }\r\n  };\r\n  DEBUG_STATE = false;\r\n\r\n  constructor() {\r\n    super();\r\n\r\n    this.state = {\r\n      displayValue: \"0\",\r\n      operandValue: '',\r\n      secondValue: '',\r\n      waitingOperand: false,\r\n      operator: null,\r\n      expressionEnd: false\r\n    }\r\n  }\r\n\r\n  render() {\r\n    const { \r\n      className,\r\n      displayValue,\r\n      operandValue,\r\n      secondValue,\r\n      operator,\r\n      expressionEnd \r\n    } = this.state;\r\n    const componentClass = styles.root \r\n      + (className ? ' ' + className : '');\r\n    const operation = operandValue\r\n      + (operator ? ' ' + operator : '')\r\n      + (secondValue ? ' ' + secondValue : '')\r\n      + (expressionEnd ? ' =' : '');\r\n\r\n    return (\r\n      <div className={componentClass}>\r\n        {\r\n          this.DEBUG_STATE ?\r\n            <div className={styles.debug}>\r\n              {JSON.stringify(this.state, null, 2)}\r\n            </div> : null\r\n        }\r\n        <RecalcDisplay\r\n          displayValue={displayValue}\r\n          operation={operation}>\r\n        </RecalcDisplay>\r\n        <div className={styles.calcBtnPad}>\r\n          <div className={styles.clearBtns}>\r\n            <RecalcButton\r\n              className={styles.calcBtn + ' ' + styles.clearingBtn}\r\n              inputFunc={this.clear}>C</RecalcButton>\r\n            <RecalcButton\r\n              className={styles.calcBtn + ' ' + styles.clearingBtn}\r\n              inputFunc={this.clearEntry}>CE</RecalcButton>\r\n            <RecalcButton\r\n              className={styles.calcBtn + ' ' + styles.clearingBtn}\r\n              inputFunc={this.backspace}>BACK</RecalcButton>\r\n          </div>\r\n          <div className={styles.numpad}>\r\n            <RecalcButton\r\n              className={styles.calcBtn}\r\n              inputFunc={this.inputDigit}\r\n              inputVal='7'>7</RecalcButton>\r\n            <RecalcButton \r\n              className={styles.calcBtn}\r\n              inputFunc={this.inputDigit}\r\n              inputVal='8'>8</RecalcButton>\r\n            <RecalcButton \r\n              className={styles.calcBtn}\r\n              inputFunc={this.inputDigit}\r\n              inputVal='9'>9</RecalcButton>\r\n            <RecalcButton\r\n              className={styles.calcBtn}\r\n              inputFunc={this.inputDigit}\r\n              inputVal='4'>4</RecalcButton>\r\n            <RecalcButton \r\n              className={styles.calcBtn}\r\n              inputFunc={this.inputDigit}\r\n              inputVal='5'>5</RecalcButton>\r\n            <RecalcButton \r\n              className={styles.calcBtn}\r\n              inputFunc={this.inputDigit}\r\n              inputVal='6'>6</RecalcButton>\r\n            <RecalcButton \r\n              className={styles.calcBtn}\r\n              inputFunc={this.inputDigit}\r\n              inputVal='1'>1</RecalcButton>\r\n            <RecalcButton \r\n              className={styles.calcBtn}\r\n              inputFunc={this.inputDigit}\r\n              inputVal='2'>2</RecalcButton>\r\n            <RecalcButton \r\n              className={styles.calcBtn}\r\n              inputFunc={this.inputDigit}\r\n              inputVal='3'>3</RecalcButton>\r\n            <RecalcButton\r\n              className={styles.calcBtn}\r\n              inputFunc={this.toggleSign}>+/-</RecalcButton>\r\n            <RecalcButton \r\n              className={styles.calcBtn}\r\n              inputFunc={this.inputDigit}\r\n              inputVal='0'>0</RecalcButton>\r\n            <RecalcButton\r\n              className={styles.calcBtn}\r\n              inputFunc={this.inputDecimal}>.</RecalcButton>\r\n          </div>\r\n          <div className={styles.opBtns}>\r\n            <RecalcButton\r\n              className={styles.operatorBtn + ' ' + styles.calcBtn}\r\n              inputFunc={this.inputOperator}\r\n              inputVal='/'>/</RecalcButton>\r\n            <RecalcButton\r\n              className={styles.operatorBtn + ' ' + styles.calcBtn}\r\n              inputFunc={this.inputOperator}\r\n              inputVal='*'>*</RecalcButton>\r\n            <RecalcButton\r\n              className={styles.operatorBtn + ' ' + styles.calcBtn}\r\n              inputFunc={this.inputOperator}\r\n              inputVal='-'>-</RecalcButton>\r\n            <RecalcButton\r\n              className={styles.operatorBtn + ' ' + styles.calcBtn}\r\n              inputFunc={this.inputOperator}\r\n              inputVal='+'>+</RecalcButton>\r\n            <RecalcButton\r\n              className={styles.operatorBtn + ' ' + styles.calcBtn}\r\n              inputFunc={this.inputEqual}>=</RecalcButton>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  inputDigit = (digit) => {\r\n    const { displayValue, waitingOperand, expressionEnd } = this.state;\r\n    const displayLength = displayValue.length;\r\n    const hasDecimal = displayValue.indexOf('.') !== -1;\r\n    const maxLength = this.MAX_INPUT_DIGITS + hasDecimal;\r\n\r\n    if (expressionEnd) {\r\n      this.clear();\r\n      this.setState({ displayValue: digit });\r\n    } else if (waitingOperand) {\r\n      this.setState({\r\n        waitingOperand: false, \r\n        displayValue: digit\r\n      });\r\n    } else if (displayLength < maxLength) {\r\n      const newValue = displayValue === '0' ? digit : displayValue + digit;\r\n      this.setState({ displayValue: newValue });\r\n    }\r\n  }\r\n\r\n  inputDecimal = () => {\r\n    const { displayValue, waitingOperand, expressionEnd} = this.state;\r\n    const displayLength = displayValue.length;\r\n    const noDecimal = displayValue.indexOf('.') === -1;\r\n    \r\n    if (waitingOperand) {\r\n      this.setState({\r\n        waitingOperand: false,\r\n        displayValue: '0.'\r\n      });\r\n    } else if (expressionEnd) {\r\n      this.clear();\r\n      this.setState({ displayValue: '0.' });\r\n    } else if (noDecimal && displayLength < this.MAX_INPUT_DIGITS) {\r\n      const newValue = displayValue + '.';\r\n      this.setState({ displayValue: newValue });\r\n    }\r\n  }\r\n\r\n  inputOperator = (operator) => {\r\n    const { displayValue, operandValue, waitingOperand, expressionEnd } = this.state;\r\n\r\n    if (operandValue === '') {\r\n      this.setState({\r\n        operandValue: displayValue\r\n      });\r\n    } else if (expressionEnd) {\r\n      this.setState({\r\n        operandValue: displayValue,\r\n        secondValue: ''\r\n      });\r\n    } else if (!waitingOperand) {\r\n      const result = this.calculate(operandValue, displayValue);\r\n      this.setState({\r\n        displayValue: result,\r\n        operandValue: result\r\n      });\r\n    }\r\n\r\n    this.setState({ \r\n      operator: operator, \r\n      waitingOperand: true, \r\n      expressionEnd: false \r\n    });\r\n  }\r\n\r\n  inputEqual = () => {\r\n    const { displayValue, operandValue, secondValue, operator } = this.state;\r\n\r\n    if (!operator) {\r\n      this.setState({ \r\n        operandValue: displayValue\r\n      });\r\n    } else if (secondValue === '') {\r\n      const result = this.calculate(operandValue, displayValue);\r\n      this.setState({\r\n        displayValue: result,\r\n        secondValue: displayValue,\r\n      })\r\n    } else {\r\n      const result = this.calculate(displayValue, secondValue);\r\n      this.setState({\r\n        displayValue: result,\r\n        operandValue: displayValue\r\n      });\r\n    }\r\n\r\n    this.setState({ expressionEnd: true, waitingOperand: false });\r\n  }\r\n\r\n  toggleSign = () => {\r\n    const { displayValue } = this.state;\r\n\r\n    this.setState({\r\n      displayValue: (-1 * parseFloat(displayValue)).toString(),\r\n      waitingOperand: false,\r\n    });\r\n  }\r\n\r\n  calculate = (a=1, b=1) => {\r\n    const { operator } = this.state;\r\n\r\n    return this.OPERATIONS[operator](\r\n      parseFloat(a), \r\n      parseFloat(b)\r\n    ).toString();    \r\n  }\r\n\r\n  backspace = () => {\r\n    const { displayValue, waitingOperand, expressionEnd } = this.state;\r\n    const displayLength = displayValue.length;\r\n    if (waitingOperand || expressionEnd) {\r\n      return\r\n    }\r\n\r\n    if (displayLength > 1) {\r\n      this.setState({ \r\n        displayValue: displayValue.slice(0, displayLength - 1)\r\n      });\r\n    } else {\r\n      this.setState({ displayValue: '0' });\r\n    }\r\n  }\r\n\r\n  clear = () => {\r\n    this.setState({\r\n      displayValue: '0',\r\n      operandValue: '',\r\n      secondValue: '',\r\n      waitingOperand: false,\r\n      operator: '',\r\n      expressionEnd: false,\r\n    });\r\n  }\r\n\r\n  clearEntry = () => {\r\n    if (this.state.expressionEnd) {\r\n      this.clear();\r\n    } else {\r\n      this.setState({\r\n        displayValue: '0'\r\n      });\r\n    }\r\n  }\r\n}\r\n\r\nexport default Recalc;","import React from 'react';\nimport Recalc from './components/Recalc';\nimport './App.css';\n\nclass App extends React.Component {\n  render() {\n    return (\n      <div className='app-container'>\n        <Recalc></Recalc>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}